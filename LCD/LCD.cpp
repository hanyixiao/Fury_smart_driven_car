/*
 * LCD.cpp
 *
 *  Created on: Oct 27, 2015
 *      Author: nbhatt
 */

//Demo code from 4D Systems GIT Repository

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <ctype.h>
#include <windows.h>
#include <bigdemo.h>

#include "Picaso_const4D.h"          // defines for 4dgl constants, generated by conversion of 4DGL constants to target language
#include "Picaso_Serial_4DLibrary.h"

unsigned char *atoz = {"abcdefghijklmnopqrstuvwxyz"} ;


int main(int argc,char *argv[])
{
    int comspeed ;
    int i, rc ;
    char comport[20] ;
    char wks[20] ;
    TimeLimit4D   = 2000 ; // 2 second timeout on all commands
    Callback4D = Callback ; // NULL ;
 // Error_Abort4D = TRUE ; // abort on detected 4D Serial error
    if (argc == 1) {
        /* If no arguments we call the Usage routine and exit */
        Usage(argv[0]);
        return 1;
    }
    strcpy(comport, argv[1] ) ;
    strupr(comport) ;
    if (argc <= 2)
        comspeed = BAUD_9600 ;
    else
    {
        for (i = 0; i < maxrates; i++)
        {
            itoa(baudrates[i], wks, 10) ;
            if (!strcmp(wks,argv[2]))
                break ;
        }
        if (i == maxrates)
        {
            printf("Invalid baud rate %s",argv[2]) ;
            return 1;
        }
        comspeed = i ;
    }
//  printf("%s %d\n", comport, comspeed) ;
    rc = OpenComm(comport, comspeed) ;
    if (rc != 0)
    {
        printf("Error %d Opening %s", /*syserrormessage(*/rc/*)*/, comport) ;
        return 2 ;
    }

    //Need a queue here to monitor when data is received

    gfx_Cls() ;

    setbaudWait(BAUD_9600) ;

    putstr("RPM received :");

    txt_MoveCursor(6, 2) ;

    putstr(RPM); //Sample RPM

    sleep(5000) ;

    return 0;
    }

